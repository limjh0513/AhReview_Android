plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk 29

    defaultConfig {
        applicationId "com.hackathon.ahreview"
        minSdk 24
        targetSdk 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    // FIXME: 아래 Dependency 역시 rootProject로 분리시켜도 좋다
    implementation "androidx.core:core-ktx:$rootProject.core_ktx_version"
    implementation "androidx.appcompat:appcompat:$rootProject.appcompat_version"
    implementation "com.google.android.material:material:$rootProject.material_version"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayout_version"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espresso_version"

    // TODO: implementation, testImplementation, androidTestImplmentation 키워드가 각각 무슨 의미이고, 어떤 경우에 사용하는지 알아봐라
    // TODO: androidx, google, 외부 라이브러리 등 조금 더 Dependency 분리 체계를 나눠서 추가해라
    // TODO: DSL을 알아보고 Kotlin DSL을 적용해봐도 좋다
    // TODO: Gradle 및 빌드 동작 원리에 대해 공부해라

    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3_version"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit2_version"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecycle_version"

    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroid_version"

    implementation("androidx.room:room-runtime:$rootProject.room_version")
    annotationProcessor("androidx.room:room-compiler:$rootProject.room_version")

    // optional - RxJava2 support for Room
    implementation("androidx.room:room-rxjava2:$rootProject.room_version")

    implementation "com.github.bumptech.glide:glide:$rootProject.glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glide_version"

    implementation "com.google.code.gson:gson:$rootProject.gson_version"

    // naver login
    implementation "com.naver.nid:naveridlogin-android-sdk:$rootProject.naver_login_version"

    implementation "io.insert-koin:koin-android:$koin_version"

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    
    implementation 'com.naver.speech.clientapi:naverspeech-ncp-sdk-android:1.1.8'
}